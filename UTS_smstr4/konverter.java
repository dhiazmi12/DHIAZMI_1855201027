/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UTS_smstr4;

import UTS.TxtToDoc;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.log4j.PropertyConfigurator;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;

/**
 *
 * @author Dhiazmi <dhiazmie@gmail.com>
 */
public class konverter extends javax.swing.JFrame {

    /**
     * Creates new form konverter
     */
    public konverter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pathopenfile = new javax.swing.JTextField();
        doc = new javax.swing.JButton();
        docx = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        openfile = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(193, 180, 209));

        jPanel1.setBackground(new java.awt.Color(255, 153, 102));

        pathopenfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pathopenfileActionPerformed(evt);
            }
        });

        doc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UTS_smstr4/doc.png"))); // NOI18N
        doc.setText("CONVERT DOC");
        doc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docActionPerformed(evt);
            }
        });

        docx.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UTS_smstr4/docx.png"))); // NOI18N
        docx.setText("CONVERT DOCX");
        docx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docxActionPerformed(evt);
            }
        });

        exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UTS_smstr4/exit.png"))); // NOI18N
        exit.setText("EXIT");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        openfile.setText("OPEN FILE");
        openfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openfileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(doc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 172, Short.MAX_VALUE)
                .addComponent(docx)
                .addGap(157, 157, 157))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(openfile)
                        .addGap(42, 42, 42)
                        .addComponent(pathopenfile, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(exit)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathopenfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(openfile))
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doc)
                    .addComponent(docx))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116))
        );

        jLabel1.setBackground(new java.awt.Color(255, 51, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("APLIKASI KONVERSI txt");

        jLabel4.setBackground(new java.awt.Color(0, 255, 102));
        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 10)); // NOI18N
        jLabel4.setText("DHIAZMIE (CONVERTER)");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(43, 43, 43))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public static void ConvertToDoc() throws FileNotFoundException, IOException {
//        String content = null;
//        FileFilter filter = new FileNameExtensionFilter("txt Files", "txt", "txt");
//        JFileChooser chooser = new JFileChooser("");
//        chooser.addChoosableFileFilter(filter);
//        java.io.File filenya;
//
//        int buka_dialog = chooser.showOpenDialog(konverter.this);
//        if (buka_dialog == JFileChooser.APPROVE_OPTION) {
//            filenya = chooser.getSelectedFile();
//            pathopenfile.setText(filenya.getPath());
//            String filename = filenya.getPath();
//
//            // membaca Txt file
//            BufferedReader bufferedReader = null;
//            try {
//                bufferedReader = new BufferedReader(new FileReader(filename));
//                StringBuilder stringBuilder = new StringBuilder();
//                String line = bufferedReader.readLine();
//
//                while (line != null) {
//                    stringBuilder.append(line);
//                    line = bufferedReader.readLine();
//                    stringBuilder.append(System.lineSeparator());
//                }
//                content = stringBuilder.toString();
//            } catch (FileNotFoundException e) {
//            } catch (IOException e) {
//            } finally {
//                try {
//                    bufferedReader.close();
//                } catch (IOException e) {
//                }
//            }
//        }

        // Write doc
        Properties properti = new Properties();
        properti.setProperty("log4j.rootLogger", "WARN");
        PropertyConfigurator.configure(properti);
        
        String outDocEn = "E://writeDoc.doc";
        XWPFDocument document = new XWPFDocument();
        FileOutputStream out = new FileOutputStream(new File(outDocEn));
        XWPFParagraph paragraph = document.createParagraph();
        XWPFRun run = paragraph.createRun();
        run.setText(readtxt());
        document.write(out);
        out.close();
    }

private static String readtxt(){
String filepath = "D:\\input.txt";
        BufferedReader br = null;
        String content = null;
        try {
            br = new BufferedReader(new FileReader(filepath));
            StringBuilder sb = new StringBuilder();
            String line = br.readLine();

            while (line != null) {
                sb.append(line);
                line = br.readLine();
                sb.append(System.lineSeparator());

            }
            content = sb.toString();
        } catch (FileNotFoundException e) {
        } catch (IOException e) {
        } finally {

            try {
                br.close();
            } catch (IOException e) {
            }
        }
        return content;
}

    public static void ConvertToDocx() throws FileNotFoundException, IOException {
//        String content = null;
//        FileFilter filter = new FileNameExtensionFilter("txt Files", "txt", "txt");
//        JFileChooser chooser = new JFileChooser("");
//        chooser.addChoosableFileFilter(filter);
//        java.io.File filenya;
//
//        int buka_dialog = chooser.showOpenDialog(konverter.this);
//        if (buka_dialog == JFileChooser.APPROVE_OPTION) {
//            filenya = chooser.getSelectedFile();
//            pathopenfile.setText(filenya.getPath());
//            String filename = filenya.getPath();
//
//            // membaca Txt file
//            BufferedReader bufferedReader = null;
//            try {
//                bufferedReader = new BufferedReader(new FileReader(filename));
//                StringBuilder stringBuilder = new StringBuilder();
//                String line = bufferedReader.readLine();
//
//                while (line != null) {
//                    stringBuilder.append(line);
//                    line = bufferedReader.readLine();
//                    stringBuilder.append(System.lineSeparator());
//                }
//                content = stringBuilder.toString();
//            } catch (FileNotFoundException e) {
//            } catch (IOException e) {
//            } finally {
//                try {
//                    bufferedReader.close();
//                } catch (IOException e) {
//                }
//            }
//        }

        // Write Docx
         Properties properti = new Properties();
        properti.setProperty("log4j.rootLogger", "WARN");
        PropertyConfigurator.configure(properti);
        XWPFDocument documentDocx = new XWPFDocument();
 
        String outDocxEN ="E:\\writedocx.docx";
        FileOutputStream outdocx = new FileOutputStream(new File(outDocxEN));
        XWPFParagraph paragraphDocx =documentDocx.createParagraph();
          XWPFRun runDocx =paragraphDocx.createRun();
          runDocx.setText(readtxt());
          documentDocx.write(outdocx);
          outdocx.close();
         
    
    }
    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void pathopenfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathopenfileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pathopenfileActionPerformed

    private void docxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docxActionPerformed
        // TODO add your handling code here:
       ConvertToDocx(readtxt());
        System.out.println(readtxt());
        JOptionPane.showMessageDialog(null, "telah berhasil diconvert");
        
    }//GEN-LAST:event_docxActionPerformed

    private void docActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docActionPerformed
        ConvertToDoc(readtxt());
        System.out.println(readtxt());
        JOptionPane.showMessageDialog(null, "telah berhasil diconvert");

    }//GEN-LAST:event_docActionPerformed

    private void openfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openfileActionPerformed
        JFileChooser chooser = new JFileChooser("");
        File filenya;

        int buka_dialog = chooser.showOpenDialog(konverter.this);

        if (buka_dialog == JFileChooser.APPROVE_OPTION) {
            filenya = chooser.getSelectedFile();
            pathopenfile.setText(filenya.getPath());
            String file = filenya.getPath();
              readtxt();

        }
    }//GEN-LAST:event_openfileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(konverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(konverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(konverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(konverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new konverter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton doc;
    private javax.swing.JButton docx;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton openfile;
    private javax.swing.JTextField pathopenfile;
    // End of variables declaration//GEN-END:variables

    private void ConvertToDocx(String readtxt) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void ConvertToDoc(String readtxt) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    

  
}
